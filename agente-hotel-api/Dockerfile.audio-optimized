# Dockerfile optimizado para producción del sistema de audio
# Multistage build para minimizar tamaño y optimizar performance

FROM python:3.12-slim as base

# Configuración de sistema base
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Instalar dependencias del sistema para audio
RUN apt-get update && apt-get install -y \
    ffmpeg \
    espeak \
    espeak-data \
    libespeak-dev \
    alsa-utils \
    portaudio19-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Crear usuario no-root para seguridad
RUN useradd --create-home --shell /bin/bash app
WORKDIR /app

# ================================
# Stage 2: Dependencies
# ================================
FROM base as dependencies

# Copiar archivos de dependencias
COPY requirements.txt requirements-audio-optimization.txt ./

# Instalar dependencias de Python
RUN pip install --no-deps -r requirements.txt && \
    pip install --no-deps -r requirements-audio-optimization.txt

# ================================
# Stage 3: Production
# ================================
FROM base as production

# Copiar dependencias instaladas
COPY --from=dependencies /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=dependencies /usr/local/bin /usr/local/bin

# Copiar código de la aplicación
COPY --chown=app:app . .

# Configurar permisos
RUN chown -R app:app /app

# Cambiar a usuario no-root
USER app

# Health check optimizado para audio
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health/ready || exit 1

# Exponer puerto
EXPOSE 8000

# Variables de entorno para optimización
ENV AUDIO_CACHE_MEMORY_MB=512 \
    AUDIO_COMPRESSION_ENABLED=true \
    AUDIO_CONNECTION_POOL_ENABLED=true \
    AUDIO_HEALTH_CHECK_INTERVAL=60 \
    PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus_multiproc \
    WORKERS=4

# Crear directorio para métricas de Prometheus
RUN mkdir -p /tmp/prometheus_multiproc

# Comando de inicio optimizado
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--access-log"]