upstream agente_audio_backend {
    least_conn;
    server agente-api-audio-1:8000 weight=3 max_fails=3 fail_timeout=30s;
    server agente-api-audio-2:8000 weight=3 max_fails=3 fail_timeout=30s;
    server agente-api-audio-3:8000 weight=2 max_fails=3 fail_timeout=30s backup;
    
    # Health checks
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=audio_api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=audio_webhook:10m rate=5r/s;
limit_conn_zone $binary_remote_addr zone=audio_conn:10m;

# Audio file caching
proxy_cache_path /tmp/nginx_audio_cache levels=1:2 keys_zone=audio_cache:100m 
                 max_size=1g inactive=60m use_temp_path=off;

server {
    listen 80;
    listen [::]:80;
    server_name audio.agente-hotelero.local;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Rate limiting
    limit_req zone=audio_api burst=20 nodelay;
    limit_conn audio_conn 50;
    
    # Connection optimizations
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        application/json
        application/javascript
        text/css
        text/plain
        text/xml
        application/xml
        application/xml+rss
        audio/mpeg
        audio/wav;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Metrics endpoint (restricted)
    location /metrics {
        allow 172.16.0.0/12;  # Docker networks
        deny all;
        
        proxy_pass http://agente_audio_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Audio webhook endpoints
    location /webhook {
        limit_req zone=audio_webhook burst=10 nodelay;
        
        proxy_pass http://agente_audio_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        
        # Timeouts for webhooks
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Audio upload/download endpoints
    location ~ ^/audio/(upload|download|stream) {
        client_max_body_size 100M;
        
        # Enable caching for downloads
        proxy_cache audio_cache;
        proxy_cache_valid 200 206 1h;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;
        
        proxy_pass http://agente_audio_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Range $http_range;
        
        # Audio streaming optimizations
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Longer timeouts for audio processing
        proxy_connect_timeout 15s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Add cache headers
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # API endpoints
    location /api/ {
        proxy_pass http://agente_audio_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        
        # Standard timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Admin endpoints (restricted)
    location /admin/ {
        allow 172.16.0.0/12;  # Docker networks
        allow 192.168.0.0/16; # Private networks
        deny all;
        
        proxy_pass http://agente_audio_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Default location
    location / {
        proxy_pass http://agente_audio_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# Monitoring endpoints server
server {
    listen 8080;
    server_name monitoring.agente-hotelero.local;
    
    # Prometheus metrics
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 172.16.0.0/12;
        deny all;
    }
    
    # Access logs for monitoring
    access_log /var/log/nginx/monitoring.access.log;
    error_log /var/log/nginx/monitoring.error.log;
}