groups:
  - name: agente-recording
    interval: 30s
    rules:
      - record: orchestrator_error_percentage
        expr: 100 * (sum by (intent) (rate(orchestrator_errors_total[5m])) / sum by (intent) (rate(orchestrator_messages_total[5m])))

      - record: orchestrator_latency_p95_seconds
        expr: histogram_quantile(0.95, sum by (le, intent) (rate(orchestrator_latency_seconds_bucket[5m])))

      - record: pms_api_latency_p95_seconds
        expr: histogram_quantile(0.95, sum by (le) (rate(pms_api_latency_seconds_bucket[5m])))

      - record: http_5xx_rate_by_endpoint
        expr: sum by (endpoint) (rate(http_requests_total{status_code=~"5.."}[5m]))

      - record: orchestrator_message_rate_by_intent_status
        expr: sum by (intent, status) (rate(orchestrator_messages_total[5m]))

      - record: orchestrator_success_rate
        expr: 100 * (sum by (intent) (rate(orchestrator_messages_total{status="ok"}[5m])) / sum by (intent) (rate(orchestrator_messages_total[5m])))

      - record: orchestrator_success_rate_all
        expr: 100 * (sum(rate(orchestrator_messages_total{status="ok"}[5m])) / sum(rate(orchestrator_messages_total[5m])))

      # Tasa global de mensajes del orquestador (para aplicar pisos de tr√°fico en alertas SLO)
      - record: orchestrator_message_rate_all
        expr: sum(rate(orchestrator_messages_total[5m]))

      # Error ratio (global) y burn rate basado en SLO_TARGET (error budget fraction)
      - record: orchestrator_error_ratio_5m
        expr: (sum(rate(orchestrator_messages_total{status!="ok"}[5m])) / sum(rate(orchestrator_messages_total[5m])))

      - record: orchestrator_error_ratio_1h
        expr: (sum(rate(orchestrator_messages_total{status!="ok"}[1h])) / sum(rate(orchestrator_messages_total[1h])))

      - record: orchestrator_error_ratio_30m
        expr: (sum(rate(orchestrator_messages_total{status!="ok"}[30m])) / sum(rate(orchestrator_messages_total[30m])))

      - record: orchestrator_error_ratio_6h
        expr: (sum(rate(orchestrator_messages_total{status!="ok"}[6h])) / sum(rate(orchestrator_messages_total[6h])))

      - record: orchestrator_burn_rate_fast
        expr: orchestrator_error_ratio_5m / BUDGET_FRACTION

      - record: orchestrator_burn_rate_slow
        expr: orchestrator_error_ratio_1h / BUDGET_FRACTION

      - record: orchestrator_burn_rate_fast2
        expr: orchestrator_error_ratio_30m / BUDGET_FRACTION

      - record: orchestrator_burn_rate_slow2
        expr: orchestrator_error_ratio_6h / BUDGET_FRACTION
