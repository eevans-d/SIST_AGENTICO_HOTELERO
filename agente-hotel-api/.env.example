# ============================================================================
# AGENTE HOTELERO - PRODUCTION ENVIRONMENT CONFIGURATION
# ============================================================================
# CRITICAL: Replace ALL placeholder values before production deployment!
# Use: cp .env.example .env.production && edit .env.production

# ==============================================================================
# Application Core Settings
# ==============================================================================
# CRITICAL: Generate secure key for production: openssl rand -hex 32  
SECRET_KEY=REPLACE_WITH_SECURE_32_CHAR_HEX_KEY
ENVIRONMENT=production
DEBUG=false
APP_NAME=Agente Hotel API
VERSION=0.1.0

# ==============================================================================
# PMS Integration (QloApps)
# ==============================================================================
PMS_TYPE=mock
PMS_BASE_URL=http://qloapps:80
# CRITICAL: Get real API key from QloApps admin panel
PMS_API_KEY=REPLACE_WITH_REAL_QLOAPPS_API_KEY
PMS_TIMEOUT=30

# ==============================================================================
# Database Configuration (PostgreSQL - Agent Data)
# ==============================================================================
POSTGRES_DB=agente_hotel
POSTGRES_USER=agente_user
# CRITICAL: Use strong password (min 16 chars, mixed case, numbers, symbols)
POSTGRES_PASSWORD=REPLACE_WITH_SECURE_POSTGRES_PASSWORD
POSTGRES_URL=postgresql+asyncpg://agente_user:REPLACE_WITH_SECURE_POSTGRES_PASSWORD@postgres:5432/agente_hotel
POSTGRES_POOL_SIZE=10
POSTGRES_MAX_OVERFLOW=10

# ==============================================================================
# MySQL Configuration (QloApps PMS Database)
# ==============================================================================
MYSQL_DATABASE=qloapps
MYSQL_USER=qloapps
# CRITICAL: Use strong passwords for both user and root
MYSQL_PASSWORD=REPLACE_WITH_SECURE_MYSQL_PASSWORD  
MYSQL_ROOT_PASSWORD=REPLACE_WITH_SECURE_MYSQL_ROOT_PASSWORD

# ==============================================================================
# Redis Configuration (Cache & Locks)
# ==============================================================================
# CRITICAL: Set password for production Redis
REDIS_PASSWORD=REPLACE_WITH_SECURE_REDIS_PASSWORD
REDIS_URL=redis://:REPLACE_WITH_SECURE_REDIS_PASSWORD@redis:6379/0
REDIS_POOL_SIZE=20

# ==============================================================================
# WhatsApp Business API (Meta Cloud API)
# ==============================================================================
# CRITICAL: Get from Meta Business Developer Console
WHATSAPP_ACCESS_TOKEN=REPLACE_WITH_REAL_META_ACCESS_TOKEN
WHATSAPP_PHONE_NUMBER_ID=REPLACE_WITH_REAL_PHONE_NUMBER_ID
WHATSAPP_VERIFY_TOKEN=REPLACE_WITH_SECURE_VERIFY_TOKEN
WHATSAPP_APP_SECRET=REPLACE_WITH_REAL_APP_SECRET

# ==============================================================================
# Gmail Integration
# ==============================================================================
# CRITICAL: Use Gmail App Password (not regular password)
GMAIL_USERNAME=hotel-reception@yourdomain.com
GMAIL_APP_PASSWORD=REPLACE_WITH_GMAIL_APP_PASSWORD

# ==============================================================================
# Audio & NLP Configuration
# ==============================================================================
AUDIO_ENABLED=true
TTS_ENGINE=espeak  # Options: espeak, coqui
LOG_LEVEL=INFO     # Options: DEBUG, INFO, WARNING, ERROR

# ==============================================================================
# Security Headers Configuration
# ==============================================================================
# CSP additional sources (space-separated)
CSP_EXTRA_SOURCES=https://fonts.googleapis.com https://fonts.gstatic.com
COOP_ENABLED=true
COEP_ENABLED=true

# ==============================================================================
# JWT Authentication
# ==============================================================================
JWT_ALGORITHM=HS256
JWT_EXPIRATION_MINUTES=60

# ==============================================================================
# Operational Settings
# ==============================================================================
CHECK_PMS_IN_READINESS=true  # Enables PMS connectivity in health checks

# ==============================================================================
# Monitoring & Observability
# ==============================================================================
# CRITICAL: Set strong password for Grafana admin
GRAFANA_ADMIN_PASSWORD=REPLACE_WITH_SECURE_GRAFANA_PASSWORD

# Alerting Configuration (Optional but recommended)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_CHANNEL=#agente-hotel-alerts
ALERT_EMAIL_TO=ops@yourdomain.com
ALERT_EMAIL_FROM=agente-alerts@yourdomain.com

# SMTP Configuration for Email Alerts
SMTP_HOST=smtp.yourdomain.com
SMTP_PORT=587
SMTP_USER=alerts@yourdomain.com
SMTP_PASSWORD=REPLACE_WITH_SMTP_PASSWORD

# ==============================================================================
# SSL/TLS Configuration (Production)
# ==============================================================================
# Domain for SSL certificates
DOMAIN=agente.yourdomain.com
EMAIL_FOR_CERTBOT=admin@yourdomain.com

# ==============================================================================
# DEPLOYMENT VALIDATION CHECKLIST
# ==============================================================================
# Before deploying to production, ensure:
# [ ] All REPLACE_WITH_* values are updated with real credentials
# [ ] All passwords are strong (16+ chars, mixed case, numbers, symbols)  
# [ ] WhatsApp Business API is properly configured and verified
# [ ] Gmail App Password is generated (not regular password)
# [ ] QloApps PMS is accessible and API key is valid
# [ ] Domain DNS is pointing to your server
# [ ] SSL certificates are configured
# [ ] Backup procedures are in place
# [ ] Monitoring alerts are configured
# [ ] Run: make validate-deployment (pre-deployment validation)
# [ ] Run: make deploy-production (production deployment)
