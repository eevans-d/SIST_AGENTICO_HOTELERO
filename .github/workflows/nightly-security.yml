name: Nightly Security & SBOM

on:
  schedule:
    # Ejecutar a las 02:00 UTC todos los días
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      generate_sbom:
        description: 'Generate SBOM (Software Bill of Materials)'
        required: false
        default: 'true'
        type: boolean

permissions:
  contents: read
  security-events: write
  
jobs:
  security-deep-scan:
    name: Deep Security Scan & SBOM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

      - name: Install Syft for SBOM
        if: github.event.inputs.generate_sbom == 'true' || github.event_name == 'schedule'
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Build Docker image
        working-directory: agente-hotel-api
        run: docker build -t agente-hotel-api:nightly .

      - name: Full Filesystem Scan
        working-directory: agente-hotel-api
        run: |
          echo "## Filesystem Vulnerability Scan" >> scan-results.md
          trivy fs --format table --output fs-scan.txt .
          cat fs-scan.txt >> scan-results.md
          echo "" >> scan-results.md

      - name: Full Docker Image Scan
        working-directory: agente-hotel-api
        run: |
          echo "## Docker Image Vulnerability Scan" >> scan-results.md
          trivy image --format table --output image-scan.txt agente-hotel-api:nightly
          cat image-scan.txt >> scan-results.md
          echo "" >> scan-results.md

      - name: Config & Secret Scan
        working-directory: agente-hotel-api
        run: |
          echo "## Configuration & Secret Scan" >> scan-results.md
          trivy fs --security-checks config,secret --format table --output config-scan.txt .
          cat config-scan.txt >> scan-results.md
          echo "" >> scan-results.md

      - name: Generate SBOM
        if: github.event.inputs.generate_sbom == 'true' || github.event_name == 'schedule'
        working-directory: agente-hotel-api
        run: |
          echo "## Software Bill of Materials (SBOM)" >> scan-results.md
          syft agente-hotel-api:nightly -o spdx-json > sbom.json
          syft agente-hotel-api:nightly -o table >> scan-results.md
          
          # Generar resumen de dependencias críticas
          echo "" >> scan-results.md
          echo "### Critical Dependencies Summary" >> scan-results.md
          jq -r '.packages[] | select(.name | test("fastapi|uvicorn|sqlalchemy|redis|pydantic")) | "- \(.name) \(.versionInfo)"' sbom.json >> scan-results.md

      - name: Check Critical Vulnerabilities
        working-directory: agente-hotel-api
        run: |
          # Fallar CI si hay vulnerabilidades CRITICAL sin fix
          CRITICAL_COUNT=$(trivy image --severity CRITICAL --format json agente-hotel-api:nightly | jq '[.Results[]?.Vulnerabilities[]? | select(.Severity == "CRITICAL" and .FixedVersion == "")] | length')
          echo "Critical vulnerabilities without fix: $CRITICAL_COUNT"
          
          if [ "$CRITICAL_COUNT" -gt 0 ]; then
            echo "::error::Found $CRITICAL_COUNT critical vulnerabilities without available fixes"
            echo "CRITICAL_VULN_COUNT=$CRITICAL_COUNT" >> $GITHUB_ENV
            exit 1
          fi

      - name: Upload SBOM as artifact
        if: always() && (github.event.inputs.generate_sbom == 'true' || github.event_name == 'schedule')
        uses: actions/upload-artifact@v4
        with:
          name: sbom-report-${{ github.run_number }}
          path: |
            agente-hotel-api/sbom.json
            agente-hotel-api/scan-results.md
          retention-days: 30

      - name: Upload scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-${{ github.run_number }}
          path: |
            agente-hotel-api/*-scan.txt
            agente-hotel-api/scan-results.md
          retention-days: 7

      - name: Post scan summary
        if: always()
        run: |
          echo "### Nightly Security Scan Results" >> $GITHUB_STEP_SUMMARY
          if [ -f "agente-hotel-api/scan-results.md" ]; then
            cat agente-hotel-api/scan-results.md >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${CRITICAL_VULN_COUNT:-0}" -gt 0 ]; then
            echo "⚠️ **$CRITICAL_VULN_COUNT critical vulnerabilities found without fixes**" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **No critical vulnerabilities without fixes found**" >> $GITHUB_STEP_SUMMARY
          fi